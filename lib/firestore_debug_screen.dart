import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';

class FirestoreDebugScreen extends StatelessWidget {
  const FirestoreDebugScreen({super.key});

  Future<void> insertRoutesToFirebase() async {
    final firestore = FirebaseFirestore.instance;

    final routesData = [
      {
        'routeId': '–ß:29–ë',
        'routeName': '–°–∞–Ω—Å–∞—Ä—ã–Ω —Ç—É–Ω–µ–ª—å-–í–æ–∫–∑–∞–ª',
        'busStops': [
          '–°–∞–Ω—Å–∞—Ä—ã–Ω —Ç—É–Ω–µ–ª—å',
          '–ß–∏–Ω–≥–∏—Å —Ö–∞–∞–Ω –∑–æ—á–∏–¥ –±—É—É–¥–∞–ª',
          '–•”©–¥”©–ª–º”©—Ä–∏–π–Ω —è–∞–º',
          '–ú–£–ë–ò–°',
          '–ê–µ—Ä–æ—Ñ–ª–æ—Ç',
          '–ê–µ—Ä–æ—Ñ–ª–æ—Çasd',
          '–ë–∞—Ä—Å —Ö—É–¥–∞–ª–¥–∞–∞–Ω—ã —Ç”©–≤',
          '–í–æ–∫–∑–∞–ª'
        ],
      },
      {
        'routeId': '–ú:1–ê',
        'routeName': '5 —à–∞—Ä - –ú”©–Ω–≥”©–Ω –∑–∞–≤—å—è–∞',
        'busStops': [
          '5 —à–∞—Ä',
          '–•–∞—Ä —Ö–æ—Ä–∏–Ω',
          '–°–∞–ø–ø–æ—Ä–æ',
          '3-—Ä —ç–º–Ω—ç–ª—ç–≥',
          '10-—Ä —Ö–æ—Ä–æ–æ–ª–æ–ª',
          '–¢–ë–î –∞–Ω–¥—É—É–¥',
          '–ë–∞—Ä—É—É–Ω 4 –∑–∞–º',
          '–£–ª—Å—ã–Ω –∏—Ö –¥—ç–ª–≥“Ø“Ø—Ä',
          '–ú”©–Ω–≥”©–Ω –∑–∞–≤—å—è–∞'
        ],
      },
      {
        'routeId': '–ú:1–ë',
        'routeName': '–û—Ñ–∏—Ü–µ—Ä—É—É–¥—ã–Ω –æ—Ä–¥–æ–Ω - –°“Ø—Ö–±–∞–∞—Ç–∞—Ä—ã–Ω —Ç–∞–ª–±–∞–π',
        'busStops': [
          '–û—Ñ–∏—Ü–µ—Ä—É—É–¥—ã–Ω –æ—Ä–¥–æ–Ω',
          '–ë–∞—è–Ω–∑“Ø—Ä—Ö –¥“Ø“Ø—Ä—ç–≥',
          '–ú–æ–Ω–≥–æ–ª –∫–∏–Ω–æ “Ø–π–ª–¥–≤—ç—Ä',
          '–ñ—É–∫–æ–≤—ã–Ω –º—É–∑–µ–π',
          '–ó“Ø“Ø–Ω 4 –∑–∞–º',
          '–ú–£–ë–ò–°',
          '–°“Ø—Ö–±–∞–∞—Ç–∞—Ä—ã–Ω —Ç–∞–ª–±–∞–π'
        ],
      },
    ];

    final busesData = [
      {'busId': '1-001', 'routeName': '–°–∞–Ω—Å–∞—Ä—ã–Ω —Ç—É–Ω–µ–ª—å-–í–æ–∫–∑–∞–ª'},
      {'busId': '1-002', 'routeName': '–°–∞–Ω—Å–∞—Ä—ã–Ω —Ç—É–Ω–µ–ª—å-–í–æ–∫–∑–∞–ª'},
      {'busId': '1-003', 'routeName': '–°–∞–Ω—Å–∞—Ä—ã–Ω —Ç—É–Ω–µ–ª—å-–í–æ–∫–∑–∞–ª'},
      {'busId': '1-004', 'routeName': '–°–∞–Ω—Å–∞—Ä—ã–Ω —Ç—É–Ω–µ–ª—å-–í–æ–∫–∑–∞–ª'},
      {'busId': '1-005', 'routeName': '5 —à–∞—Ä - –ú”©–Ω–≥”©–Ω –∑–∞–≤—å—è–∞'},
      {'busId': '1-006', 'routeName': '5 —à–∞—Ä - –ú”©–Ω–≥”©–Ω –∑–∞–≤—å—è–∞'},
      {'busId': '1-007', 'routeName': '5 —à–∞—Ä - –ú”©–Ω–≥”©–Ω –∑–∞–≤—å—è–∞'},
      {'busId': '1-008', 'routeName': '5 —à–∞—Ä - –ú”©–Ω–≥”©–Ω –∑–∞–≤—å—è–∞'},
      {'busId': '1-009', 'routeName': '–û—Ñ–∏—Ü–µ—Ä—É—É–¥—ã–Ω –æ—Ä–¥–æ–Ω - –°“Ø—Ö–±–∞–∞—Ç–∞—Ä—ã–Ω —Ç–∞–ª–±–∞–π'},
      {'busId': '1-010', 'routeName': '–û—Ñ–∏—Ü–µ—Ä—É—É–¥—ã–Ω –æ—Ä–¥–æ–Ω - –°“Ø—Ö–±–∞–∞—Ç–∞—Ä—ã–Ω —Ç–∞–ª–±–∞–π'},
      {'busId': '1-011', 'routeName': '–û—Ñ–∏—Ü–µ—Ä—É—É–¥—ã–Ω –æ—Ä–¥–æ–Ω - –°“Ø—Ö–±–∞–∞—Ç–∞—Ä—ã–Ω —Ç–∞–ª–±–∞–π'},
      {'busId': '1-012', 'routeName': '–û—Ñ–∏—Ü–µ—Ä—É—É–¥—ã–Ω –æ—Ä–¥–æ–Ω - –°“Ø—Ö–±–∞–∞—Ç–∞—Ä—ã–Ω —Ç–∞–ª–±–∞–π'},
    ];

    for (final route in routesData) {
      await firestore.collection('routes').doc(route['routeId'] as String).set({
        'routeName': route['routeName'],
        'busStops': route['busStops'], // <- Only strings
      });
    }

    for (final bus in busesData) {
      await firestore.collection('buses').doc(bus['busId'] as String).set(bus);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('üìä Firestore Routes'),
        backgroundColor: Colors.teal,
        actions: [
          IconButton(
            icon: const Icon(Icons.cloud_upload),
            onPressed: () async {
              await insertRoutesToFirebase();
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(content: Text('Data inserted successfully!')),
              );
            },
          ),
        ],
      ),
      body: FutureBuilder<QuerySnapshot>(
        future: FirebaseFirestore.instance.collection('routes').get(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Center(child: CircularProgressIndicator());
          }

          if (!snapshot.hasData || snapshot.data!.docs.isEmpty) {
            return const Center(child: Text('No routes found.'));
          }

          final routes = snapshot.data!.docs;

          return ListView.builder(
            itemCount: routes.length,
            itemBuilder: (context, index) {
              final route = routes[index];
              final routeName = route['routeName'];
              final stops = List<String>.from(route['busStops']);
              return ListTile(
                title: Text(routeName),
                subtitle: Text(stops.join(' ‚Üí ')),
              );
            },
          );
        },
      ),
    );
  }
}
